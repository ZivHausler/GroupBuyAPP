{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git-Projects\\\\GroupBuy-APP\\\\GroupBuy-APP\\\\src\\\\components\\\\pages\\\\signuppage\\\\SignUpNew\\\\SignUpNew.js\";\nimport React from 'react';\nimport styles from './SignUpNew.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUpNew extends React.Component {\n  constructor() {\n    super();\n\n    this.vaildateEmail = email => {\n      for (let i = 0; i < this.users.length; i++) {\n        if (this.users[i].email.toLowerCase() === email.toLowerCase()) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.inputHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.registerNow = () => {\n      console.log(this.vaildateEmail(this.state.email));\n\n      if (!this.vaildateEmail(this.state.email)) {\n        console.log(\"adding user into the list\");\n        this.users.push({\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password\n        });\n        localStorage.users = JSON.stringify(this.users);\n      } else console.log('This user email already exists => not adding the user');\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    }; // this.users = [\n    //     {\n    //         firstName: \"Daniel\",\n    //         lastName: \"Ezra\",\n    //         email: \"daniel\",\n    //         password: \"123456\",\n    //     },\n    //     {\n    //         firstName: \"Ziv\",\n    //         lastName: \"Housler\",\n    //         email: \"zivhousler@gmail.com\",\n    //         password: \"11223344\",\n    //     },\n    //     {\n    //         firstName: \"Hadar\",\n    //         lastName: \"Cohen\",\n    //         email: \"hadar5z5z5z@gmail.com\",\n    //         password: \"123\",\n    //     }\n    // ]\n\n    this.inputs = [{\n      placeholder: 'First name',\n      name: 'firstName',\n      type: 'text',\n      class: 'firstNameInput'\n    }, {\n      placeholder: 'Last name',\n      name: 'lastName',\n      type: 'text',\n      class: 'lastNameInput'\n    }, {\n      placeholder: 'Email address',\n      name: 'email',\n      type: 'email',\n      class: 'emailAddressInput'\n    }, {\n      placeholder: 'Create password',\n      name: 'password',\n      type: 'text',\n      class: 'passwordInput'\n    }];\n    if (localStorage.users) this.users = JSON.parse(localStorage.users);\n    console.log(this.users);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.newAccountDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputsDiv,\n        children: this.inputs.map((input, i) => /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.inputHandler,\n          placeholder: input.placeholder,\n          type: input.type,\n          name: input.name,\n          className: input.class\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password must be at least 8 characters long.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.registerNow,\n        type: \"button\",\n        className: \"signButton\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SignUpNew;","map":{"version":3,"sources":["E:/Git-Projects/GroupBuy-APP/GroupBuy-APP/src/components/pages/signuppage/SignUpNew/SignUpNew.js"],"names":["React","styles","SignUpNew","Component","constructor","vaildateEmail","email","i","users","length","toLowerCase","inputHandler","e","setState","target","name","value","registerNow","console","log","state","push","firstName","lastName","password","localStorage","JSON","stringify","inputs","placeholder","type","class","parse","render","newAccountDiv","inputsDiv","map","input"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './SignUpNew.module.css';\n\nclass SignUpNew extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: ''\n        };\n        // this.users = [\n        //     {\n        //         firstName: \"Daniel\",\n        //         lastName: \"Ezra\",\n        //         email: \"daniel\",\n        //         password: \"123456\",\n        //     },\n        //     {\n        //         firstName: \"Ziv\",\n        //         lastName: \"Housler\",\n        //         email: \"zivhousler@gmail.com\",\n        //         password: \"11223344\",\n        //     },\n        //     {\n        //         firstName: \"Hadar\",\n        //         lastName: \"Cohen\",\n        //         email: \"hadar5z5z5z@gmail.com\",\n        //         password: \"123\",\n        //     }\n        // ]\n        this.inputs = [\n            {\n                placeholder: 'First name',\n                name: 'firstName',\n                type: 'text',\n                class: 'firstNameInput'\n            },\n            {\n                placeholder: 'Last name',\n                name: 'lastName',\n                type: 'text',\n                class: 'lastNameInput'\n            },\n            {\n                placeholder: 'Email address',\n                name: 'email',\n                type: 'email',\n                class: 'emailAddressInput'\n            },\n            {\n                placeholder: 'Create password',\n                name: 'password',\n                type: 'text',\n                class: 'passwordInput'\n            }\n        ]\n        if(localStorage.users)\n            this.users = JSON.parse(localStorage.users);\n\n        console.log(this.users);\n    }\n\n    vaildateEmail = (email) => {\n        for (let i = 0; i < this.users.length; i++) {\n            if(this.users[i].email.toLowerCase() === email.toLowerCase()){\n               return true;\n            }\n        } return false;\n    }\n\n    inputHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    registerNow = () => {\n        console.log(this.vaildateEmail(this.state.email));\n        if(!this.vaildateEmail(this.state.email)){\n            console.log(\"adding user into the list\");\n            this.users.push({firstName: this.state.firstName, lastName: this.state.lastName, email: this.state.email, password: this.state.password});\n            localStorage.users = JSON.stringify(this.users);\n        }\n        else console.log('This user email already exists => not adding the user');\n\n    }\n\n    render() {\n        return (\n            <div className={styles.newAccountDiv}>\n                <div className={styles.inputsDiv}>\n                    {this.inputs.map((input, i) => (\n                        <input onChange={this.inputHandler} key={i} placeholder={input.placeholder} type={input.type} name={input.name} className={input.class}></input>))}\n                </div>\n                <p>Password must be at least 8 characters long.</p>\n                <button onClick={this.registerNow} type=\"button\" className=\"signButton\">Sign Up</button>\n            </div >\n        )\n    }\n}\n\nexport default SignUpNew;"]},"metadata":{},"sourceType":"module"}